// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generate Code Snapshot Test api.test.domain 1`] = `
"// 
// Generated by @himenon/openapi-typescript-code-generator v0.0.0
// 
// OpenApi : 3.1.0-rc
// 
// License  : MIT
// 


/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#schemaObject */
export namespace Schemas {
    export type StringType = string;
    export type StringHasEnumType = \\"a\\" | \\"A\\" | \\"b\\" | \\"B\\" | \\"c\\" | \\"C\\";
    export type StringDateType = string;
    export type StringDateTimeType = string;
    export type StringPasswordType = string;
    export type StringByteType = string;
    export type StringBinaryType = string;
    export type StringWithPatternType = string;
    export type NumberType = number;
    export type NumberHasEnumType = 1 | 2 | 3 | 100 | 123 | 0.1 | -0.1 | 0;
    export type NumberInt32Type = number;
    export type NumberInt64Type = number;
    export type NumberFloat = number;
    export type NumberDouble = number;
    export type BooleanType = boolean;
    export type ArrayStringType = string[];
    export type ArrayNumberType = number[];
    export type ArrayBooleanType = boolean[];
    export interface ObjectEmptyPropertiesType {
    }
    export interface ObjectHasPropertiesType {
        stringType?: string;
        numberType?: number;
        booleanType?: boolean;
        arrayType?: string;
        objectType?: {
            requiredStringType: string;
        };
    }
    export type OneOfType = string | number | {};
    export type AllOfType = {
        A?: string;
    } & {
        B?: string;
    };
    export type LocalRefStringType = string;
    export type LocalRefNumberType = number;
    export type LocalRefBooleanType = boolean;
    export type LocalRefArrayStringType = boolean;
    export interface LocalRefObjectHasPropertiesType {
        stringType?: string;
        numberType?: number;
        booleanType?: boolean;
        arrayType?: string;
        objectType?: {
            requiredStringType: string;
        };
    }
    export interface LocalRefObjectProperties {
        /** String Literal */
        stringType: string;
        /** Number Literal */
        numberType: number;
        /** Boolean Literal */
        booleanType: boolean;
        /** Boolean Literal */
        arrayType: boolean;
        objectType: {
            stringType?: string;
            numberType?: number;
            booleanType?: boolean;
            arrayType?: string;
            objectType?: {
                requiredStringType: string;
            };
        };
    }
    export type LocalRefOneOfType = string | number | {
        stringType?: string;
        numberType?: number;
        booleanType?: boolean;
        arrayType?: string;
        objectType?: {
            requiredStringType: string;
        };
    } | {
        /** String Literal */
        stringType: string;
        /** Number Literal */
        numberType: number;
        /** Boolean Literal */
        booleanType: boolean;
        /** Boolean Literal */
        arrayType: boolean;
        objectType: {
            stringType?: string;
            numberType?: number;
            booleanType?: boolean;
            arrayType?: string;
            objectType?: {
                requiredStringType: string;
            };
        };
    };
    export type LocalRefAllOfType = string & number & {
        stringType?: string;
        numberType?: number;
        booleanType?: boolean;
        arrayType?: string;
        objectType?: {
            requiredStringType: string;
        };
    } & {
        /** String Literal */
        stringType: string;
        /** Number Literal */
        numberType: number;
        /** Boolean Literal */
        booleanType: boolean;
        /** Boolean Literal */
        arrayType: boolean;
        objectType: {
            stringType?: string;
            numberType?: number;
            booleanType?: boolean;
            arrayType?: string;
            objectType?: {
                requiredStringType: string;
            };
        };
    };
    export type RemoteRefString = string;
    export type RemoteRefBoolean = boolean;
    export type RemoteRefNumber = number;
    /** Level 3 */
    export type RemoteRefArray = string[];
    /** Level 4 */
    export interface RemoteRefObject {
        A?: string;
        B?: number;
    }
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#componentsObject */
export namespace Headers {
    export type StringHeader = string;
    export type HeaderA = number;
    export type HeaderB = string;
    export type ReferenceOfHeaderToSchema = string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#responsesObject */
export namespace Responses {
    /**
     * Status Code 100
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/100
     */
    export namespace Continue { }
    /**
     * Status Code 101
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/101
     */
    export namespace SwitchingProtocol { }
    /** Type Reference - string */
    export namespace LocalReferenceStringDateTimeType {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
        export interface Content {
            \\"application/json\\": string;
        }
    }
    /** Local Reference - object */
    export namespace LocalReferenceObjectType {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
        export interface Content {
            \\"application/json\\": {
                stringType?: string;
                numberType?: number;
                booleanType?: boolean;
                arrayType?: string;
                objectType?: {
                    requiredStringType: string;
                };
            };
        }
    }
    /** Response -> Schema */
    export namespace ReferenceOfResponseToSchema {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
        export interface Content {
            \\"application/json\\": {
                forResponse?: string;
            };
        }
    }
    /** response A definition */
    export namespace RefResponseA {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
        export interface Header {
            HeaderA: number;
            HeaderB: string;
        }
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
        export interface Content {
            \\"application/json\\": {
                name?: \\"responseA\\";
            };
        }
    }
    /** response B definition */
    export namespace RefResponseB {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
        export interface Content {
            \\"application/json\\": {
                name?: \\"responseB\\";
            };
        }
    }
    /** response C definition */
    export namespace RefResponseC {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
        export interface Content {
            \\"application/json\\": {
                name?: \\"responseC\\";
            };
        }
    }
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#parameterObject */
export namespace Parameters {
    /** parameters.StringQueryParams */
    export type StringQueryParams = string;
    /** parameters.NumberQueryParams */
    export type NumberQueryParams = number;
    /** parameters.StringQueryParams */
    export type StringHeaderParams = string;
    /** remote reference parameter */
    export type RemoteReferenceA = number;
    /** level1 - remote reference parameter */
    export type RemoteReferenceB = string;
    /** parameters -> schemas */
    export type ReferenceOfParameterToSchema = string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#componentsObject */
export namespace RequestBodies {
    /** Request body string type */
    export namespace StringType {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
        export interface Content {
            \\"application/json\\": string;
        }
    }
    /** Request body Local reference string type */
    export namespace LocalReferenceStringType {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
        export interface Content {
            \\"application/json\\": \\"a\\" | \\"A\\" | \\"b\\" | \\"B\\" | \\"c\\" | \\"C\\";
        }
    }
    /** requestBodies -> schemas */
    export namespace ReferenceOfRequestBodyToSchema {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
        export interface Content {
            \\"application/json\\": {
                a?: string;
            };
        }
    }
    /** Remote Request body A */
    export namespace RefRequestBodyA {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
        export interface Content {
            \\"application/json\\": {
                body?: string;
            };
        }
    }
    /** Remote Request body B */
    export namespace RefRequestBodyB {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
        export interface Content {
            \\"application/json\\": {
                body?: string;
            };
        }
    }
    /** Remote Request body C */
    export namespace RefRequestBodyC {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
        export interface Content {
            \\"application/json\\": {
                body?: string;
            };
        }
    }
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getIncludeLocalReference {
    StringQuery: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getIncludeLocalReference$Status$200 {
    \\"application/json\\": {
        meta: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getIncludeRemoteReference {
    IncludeRemoteReference: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$getIncludeRemoteReference {
    \\"application/json\\": string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getFullRemoteReference {
    FullRemoteReferenceQuery: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getFullRemoteReference$Status$200 {
    \\"application/json\\": {
        name?: \\"responseA\\";
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getReferenceItems$Status$200 {
    \\"application/json\\": {
        books?: {
            name: string;
            children: {
                id: string;
                /** child name */
                name: string;
            }[];
        }[];
    };
}
export type ResponseContentType$getIncludeLocalReference = keyof Response$getIncludeLocalReference$Status$200;
export interface Params$getIncludeLocalReference {
    parameter: Parameter$getIncludeLocalReference;
}
export type RequestContentType$getIncludeRemoteReference = keyof RequestBody$getIncludeRemoteReference;
export interface Params$getIncludeRemoteReference {
    parameter: Parameter$getIncludeRemoteReference;
    requestBody: RequestBody$getIncludeRemoteReference[\\"application/json\\"];
}
export type ResponseContentType$getFullRemoteReference = keyof Response$getFullRemoteReference$Status$200;
export interface Params$getFullRemoteReference {
    parameter: Parameter$getFullRemoteReference;
}
export type ResponseContentType$getReferenceItems = keyof Response$getReferenceItems$Status$200;
export type HttpMethod = \\"GET\\" | \\"PUT\\" | \\"POST\\" | \\"DELETE\\" | \\"OPTIONS\\" | \\"HEAD\\" | \\"PATCH\\" | \\"TRACE\\";
export interface ObjectLike {
    [key: string]: any;
}
export interface QueryParameter {
    value: any;
    style?: \\"form\\" | \\"spaceDelimited\\" | \\"pipeDelimited\\" | \\"deepObject\\";
    explode: boolean;
}
export interface QueryParameters {
    [key: string]: QueryParameter;
}
export interface ApiClient<RequestOption> {
    request: (httpMethod: HttpMethod, url: string, headers: ObjectLike | any, requestBody: ObjectLike | any, queryParameters: QueryParameters | undefined, options?: RequestOption) => Promise<any>;
}
export class Client<RequestOption> {
    constructor(private apiClient: ApiClient<RequestOption>, private baseUrl: string) { }
    public async getIncludeLocalReference(params: Params$getIncludeLocalReference, option?: RequestOption): Promise<Response$getIncludeLocalReference$Status$200[\\"application/json\\"]> {
        const url = this.baseUrl + \`/get/IncludeLocalReference\`;
        const headers = {
            Accept: \\"application/json\\"
        };
        const queryParameters: QueryParameters = {
            StringQuery: { value: params.parameter.StringQuery, explode: false }
        };
        return this.apiClient.request(\\"GET\\", url, undefined, headers, queryParameters, option);
    }
    public async getIncludeRemoteReference(params: Params$getIncludeRemoteReference, option?: RequestOption): Promise<void> {
        const url = this.baseUrl + \`/get/IncludeRemoteReference\`;
        const headers = {
            \\"Content-Type\\": \\"application/json\\"
        };
        const queryParameters: QueryParameters = {
            IncludeRemoteReference: { value: params.parameter.IncludeRemoteReference, explode: false }
        };
        return this.apiClient.request(\\"GET\\", url, params.requestBody, headers, queryParameters, option);
    }
    public async getFullRemoteReference(params: Params$getFullRemoteReference, option?: RequestOption): Promise<Response$getFullRemoteReference$Status$200[\\"application/json\\"]> {
        const url = this.baseUrl + \`/FullRemoteReference\`;
        const headers = {
            Accept: \\"application/json\\"
        };
        const queryParameters: QueryParameters = {
            FullRemoteReferenceQuery: { value: params.parameter.FullRemoteReferenceQuery, explode: false }
        };
        return this.apiClient.request(\\"GET\\", url, undefined, headers, queryParameters, option);
    }
    public async getReferenceItems(option?: RequestOption): Promise<Response$getReferenceItems$Status$200[\\"application/json\\"]> {
        const url = this.baseUrl + \`/get/reference/items\`;
        const headers = {
            Accept: \\"application/json\\"
        };
        return this.apiClient.request(\\"GET\\", url, undefined, headers, undefined, option);
    }
}
"
`;
