// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generate Code Snapshot Test api.test.domain 1`] = `
"// 
// Generated by @himenon/openapi-typescript-ast-codegen v0.1.0
// 
// OpenApi : 3.1.0
// 
// License  : MIT
// 


/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#schemaObject */
export namespace Schemas {
    export type UserId = number;
    export interface User {
        id?: UserId;
        username?: string;
        age?: number;
    }
    export interface ResponseMeta {
        statusCode: number;
    }
    export interface Blog {
        /** Blog Title */
        title?: string;
        authorId?: Schemas.UserId;
    }
    export type BlogId = number;
    export interface Favorite {
        title: string;
        createdAt: string;
    }
    export interface Archives {
        blogId?: BlogId;
        authorId?: UserId;
    }
    export type IpAddress = string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#componentsObject */
export namespace Headers {
    export type Origin = string;
    export type Authorization = string;
    export type IPAddress = Schemas.IpAddress;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#responsesObject */
export namespace Responses {
    /** Succeeded in creating a blog post */
    export namespace SucceededCreatingBlogPost {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
        export interface Header {
            \\"X-Rate-Limit\\": number;
        }
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
        export interface Content {
            \\"application/json\\": {
                meta: Schemas.ResponseMeta;
            };
            \\"application/x-www-form-urlencoded\\": {
                meta?: Schemas.ResponseMeta;
            };
        }
    }
    /** Failed creating blog post */
    export namespace FailedCreatingBlogPost {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
        export interface Header {
            Origin: string;
            ResponseTime: number;
        }
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
        export interface Content {
            \\"application/json\\": {
                meta: Schemas.ResponseMeta;
                data: {
                    reason: string;
                };
            };
        }
    }
    export namespace blog {
        /** 成功 */
        export namespace AuthorizationError {
            /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
            export interface Header {
                ResponseTime: null;
                Origin: string;
            }
            /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
            export interface Content {
                \\"application/json\\": {
                    meta: Schemas.ResponseMeta;
                    reason: string;
                };
            }
        }
    }
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#parameterObject */
export namespace Parameters {
    export type BlogId = number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#componentsObject */
export namespace RequestBodies {
    /** BlogPost */
    export namespace BlogPost {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
        export interface Content {
            \\"application/json\\": {
                /** Blog title */
                title?: string;
                /** Blog body */
                body?: string;
                tags?: (\\"javascript\\" | \\"typescript\\" | \\"openapi\\")[];
            };
        }
    }
    export namespace BlogDeleteReason {
        /** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
        export interface Content {
            \\"application/json\\": {
                reason?: string;
            };
        }
    }
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$findBlog {
    BlogId: Parameters.BlogId;
}
export type RequestBody$createBlog2 = RequestBodies.BlogPost.Content;
export type Response$createBlog2$Status$200 = Responses.SucceededCreatingBlogPost.Content;
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getUser {
    username: string;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$createBlog$Status$200 {
    \\"application/json\\": {
        meta: {
            statusCode: number;
        };
    };
    \\"application/x-www-form-urlencoded\\": {
        meta?: {
            statusCode: number;
        };
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$deleteWithReason {
    \\"application/json\\": {
        reason?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$deleteWithReason$Status$401 {
    \\"application/json\\": {
        meta: {
            statusCode: number;
        };
        reason: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$deleteBlog {
    id: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$deleteBlog {
    \\"application/json\\": {
        name?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$deleteBlog$Status$Status$401 {
    \\"application/json\\": {
        meta: Schemas.ResponseMeta;
        reason: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#headerObject */
export interface Parameter$getBookAndAuthor {
    bookId: number;
    authorId: number;
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$getBookAndAuthor$Status$200 {
    \\"application/json\\": {
        authorName?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#requestBodyObject */
export interface RequestBody$createMultiResponse {
    \\"application/json\\": {
        nameJson?: string;
    };
    \\"application/xml\\": {
        nameXML?: string;
    };
}
/** @see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.0.md#mediaTypeObject */
export interface Response$createMultiResponse$Status$200 {
    \\"application/json\\": {
        meta?: {
            status?: number;
        };
    };
    \\"application/xml\\": {
        meta?: {
            status?: number;
        };
    };
}
export interface Params$findBlog {
    parameter: Parameter$findBlog;
}
export type RequestContentType$createBlog2 = keyof RequestBody$createBlog2;
export type ResponseContentType$createBlog2 = keyof Response$createBlog2$Status$200;
export interface Params$createBlog2<U extends ResponseContentType$createBlog2> {
    headers: {
        Accept: U;
    };
    requestBody: RequestBody$createBlog2[\\"application/json\\"];
}
export interface Params$getUser {
    parameter: Parameter$getUser;
}
export type ResponseContentType$createBlog = keyof Response$createBlog$Status$200;
export interface Params$createBlog<U extends ResponseContentType$createBlog> {
    headers: {
        Accept: U;
    };
}
export type RequestContentType$deleteWithReason = keyof RequestBody$deleteWithReason;
export interface Params$deleteWithReason {
    requestBody: RequestBody$deleteWithReason[\\"application/json\\"];
}
export type RequestContentType$deleteBlog = keyof RequestBody$deleteBlog;
export interface Params$deleteBlog {
    parameter: Parameter$deleteBlog;
    requestBody: RequestBody$deleteBlog[\\"application/json\\"];
}
export type ResponseContentType$getBookAndAuthor = keyof Response$getBookAndAuthor$Status$200;
export interface Params$getBookAndAuthor {
    parameter: Parameter$getBookAndAuthor;
}
export type RequestContentType$createMultiResponse = keyof RequestBody$createMultiResponse;
export type ResponseContentType$createMultiResponse = keyof Response$createMultiResponse$Status$200;
export interface Params$createMultiResponse<T extends RequestContentType$createMultiResponse, U extends ResponseContentType$createMultiResponse> {
    headers: {
        \\"Content-Type\\": T;
        Accept: U;
    };
    requestBody: RequestBody$createMultiResponse[T];
}
export type HttpMethod = \\"GET\\" | \\"PUT\\" | \\"POST\\" | \\"DELETE\\" | \\"OPTIONS\\" | \\"HEAD\\" | \\"PATCH\\" | \\"TRACE\\";
export interface ObjectLike {
    [key: string]: any;
}
export interface QueryParameter {
    value: any;
    style?: \\"form\\" | \\"spaceDelimited\\" | \\"pipeDelimited\\" | \\"deepObject\\";
    explode: boolean;
}
export interface QueryParameters {
    [key: string]: QueryParameter;
}
export interface ApiClient<RequestOption> {
    request: (httpMethod: HttpMethod, url: string, headers: ObjectLike | undefined, requestBody: ObjectLike | undefined, queryParameters: QueryParameters | undefined, options?: RequestOption) => Promise<any>;
}
export class Client<RequestOption> {
    constructor(private apiClient: ApiClient<RequestOption>, private baseUrl: string) { }
    /** Search Blog */
    public async findBlog(params: Params$findBlog, option?: RequestOption): Promise<void> {
        const url = this.baseUrl + \`/blog\`;
        const headers = {};
        return this.apiClient.request(\\"GET\\", url, undefined, headers, undefined, option);
    }
    /**
     * Create Blog
     * Summary Create Blog
     */
    public async createBlog2<ResponseContentType extends ResponseContentType$createBlog2>(params: Params$createBlog2<ResponseContentType>, option?: RequestOption): Promise<Response$createBlog2$Status$200[ResponseContentType]> {
        const url = this.baseUrl + \`/blog\`;
        const headers = {
            \\"Content-Type\\": \\"application/json\\",
            Accept: params.headers.Accept
        };
        return this.apiClient.request(\\"POST\\", url, params.requestBody, headers, undefined, option);
    }
    /** user page */
    public async getUser(params: Params$getUser, option?: RequestOption): Promise<void> {
        const url = this.baseUrl + \`/user/\${params.parameter.username}/hoge/\`;
        const headers = {};
        return this.apiClient.request(\\"GET\\", url, undefined, headers, undefined, option);
    }
    /**
     * Create Blog
     * Create Blog
     */
    public async createBlog<ResponseContentType extends ResponseContentType$createBlog>(params: Params$createBlog<ResponseContentType>, option?: RequestOption): Promise<Response$createBlog$Status$200[ResponseContentType]> {
        const url = this.baseUrl + \`/blog/{id}/delete/\`;
        const headers = {
            Accept: params.headers.Accept
        };
        return this.apiClient.request(\\"POST\\", url, undefined, headers, undefined, option);
    }
    /**
     * Delete Blog
     * Delete Blog
     */
    public async deleteWithReason(params: Params$deleteWithReason, option?: RequestOption): Promise<void> {
        const url = this.baseUrl + \`/blog/{id}/delete/\`;
        const headers = {
            \\"Content-Type\\": \\"application/json\\"
        };
        return this.apiClient.request(\\"DELETE\\", url, params.requestBody, headers, undefined, option);
    }
    /**
     * Delete Blog
     * Delete Blog
     */
    public async deleteBlog(params: Params$deleteBlog, option?: RequestOption): Promise<void> {
        const url = this.baseUrl + \`/blog/\${params.parameter.id}/\`;
        const headers = {
            \\"Content-Type\\": \\"application/json\\"
        };
        return this.apiClient.request(\\"DELETE\\", url, params.requestBody, headers, undefined, option);
    }
    /** search book and author */
    public async getBookAndAuthor(params: Params$getBookAndAuthor, option?: RequestOption): Promise<Response$getBookAndAuthor$Status$200[\\"application/json\\"]> {
        const url = this.baseUrl + \`/books/\${params.parameter.bookId}/author/\${params.parameter.authorId}/something\`;
        const headers = {
            Accept: \\"application/json\\"
        };
        return this.apiClient.request(\\"GET\\", url, undefined, headers, undefined, option);
    }
    /** Multi response test */
    public async createMultiResponse<RequestContentType extends RequestContentType$createMultiResponse, ResponseContentType extends ResponseContentType$createMultiResponse>(params: Params$createMultiResponse<RequestContentType, ResponseContentType>, option?: RequestOption): Promise<Response$createMultiResponse$Status$200[ResponseContentType]> {
        const url = this.baseUrl + \`/multi/response\`;
        const headers = {
            \\"Content-Type\\": params.headers[\\"Content-Type\\"],
            Accept: params.headers.Accept
        };
        return this.apiClient.request(\\"POST\\", url, params.requestBody, headers, undefined, option);
    }
}
"
`;
