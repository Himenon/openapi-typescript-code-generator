// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Format Types format.domain 1`] = `
"// 
// Generated by @himenon/openapi-typescript-code-generator
// 
// OpenApi : 3.1.0
// 
// License  : MIT
// 


export namespace Schemas {
    export interface CustomType {
        name?: string;
    }
    export type BinaryFormat_String = Blob;
    export type IntOrStringFormat_String = number | string;
    export type CustomTypeFormat_String = CustomType;
    export type DateTimeFormat_String = Date;
    export type BinaryFormat_Int = Blob;
    export type IntOrStringFormat_Int = number | string;
    export type CustomTypeFormat_Int = CustomType;
    export type DateTimeFormat_Int = Date;
    export interface ObjectPropertyCustomType {
        date?: Date;
    }
    export type Binary = Blob;
    export type IntOrString = number | string;
    export type AandB = A & B;
}
export type HttpMethod = \\"GET\\" | \\"PUT\\" | \\"POST\\" | \\"DELETE\\" | \\"OPTIONS\\" | \\"HEAD\\" | \\"PATCH\\" | \\"TRACE\\";
export interface ObjectLike {
    [key: string]: any;
}
export interface QueryParameter {
    value: any;
    style?: \\"form\\" | \\"spaceDelimited\\" | \\"pipeDelimited\\" | \\"deepObject\\";
    explode: boolean;
}
export interface QueryParameters {
    [key: string]: QueryParameter;
}
export type SuccessResponses = void;
export namespace ErrorResponse { }
export interface ApiClient<RequestOption> {
    request: <T = SuccessResponses>(httpMethod: HttpMethod, url: string, headers: ObjectLike | any, requestBody: ObjectLike | any, queryParameters: QueryParameters | undefined, options?: RequestOption) => Promise<T>;
}
export class Client<RequestOption> {
    private baseUrl: string;
    constructor(private apiClient: ApiClient<RequestOption>, baseUrl: string) { this.baseUrl = baseUrl.replace(/\\\\/$/, \\"\\"); }
}
"
`;
