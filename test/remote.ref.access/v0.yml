openapi: 3.1.0
info:
  version: 1.0.0
  title: v0.remote.ref.access.test
  description: Library test schema
  license:
    name: MIT

servers:
  - url: "http://dev.remote.ref.access.test/v0/"
    description: Development Environment
  - url: "https://ref,remote.access.test/v0/"
    description: Production Environment

tags:
  - name: test

components:
  schemas:
    BookID:
      type: string
      format: uuid
    Book:
      type: object
      required:
        - id
        - metadata
      properties:
        id:
          $ref: "#/components/schemas/BookID"
        author:
          type: object
          properties:
            name:
              type: string
            age:
              type: string
        publisher:
          type: object
          properties:
            name:
              type: String
            address:
              type: string
        metadata:
          type: object
          required:
            - description
          properties:
            description:
              type: string
    Author:
      $ref: "#/components/schemas/Book/properties/author"
    Publisher:
      $ref: "#/components/schemas/Book/properties/publisher"

paths:
  /get/book/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Book ID
        schema:
          $ref: "#/components/schemas/BookID"
    get:
      operationId: getBook
      responses:
        200:
          description: Get Books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
  /get/book/{id}/description:
    parameters:
      - name: id
        in: path
        required: true
        description: Book ID
        schema:
          $ref: "#/components/schemas/BookID"
    get:
      operationId: getDescription
      responses:
        200:
          description: Get Book Description
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book/properties/metadata/properties/description"

  /get/author/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Author Id
        schema:
          type: string
          format: uuid
    get:
      operationId: getAuthor
      responses:
        200:
          description: Get Author
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book/properties/author"
  /get/publisher/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Publisher ID
        schema:
          type: string
          format: uuid
    get:
      operationId: getPublisher
      responses:
        200:
          description: Get Publisher
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
