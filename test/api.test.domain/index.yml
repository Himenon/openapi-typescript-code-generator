openapi: 3.1.0
info:
  version: 1.0.0
  title: api.test.domain
  description: Library test schema
  license:
    name: MIT

servers:
  - url: "http://dev.api.test.domain/"
    description: Development Environment
  - url: "https://api.test.domain/"
    description: Production Environment

tags:
  - name: test

components:
  schemas:
    UserId:
      $ref: "./components/schemas/UserId.yml"
    User:
      $ref: "./components/schemas/User.yml"
    Blog:
      type: object
      properties:
        title:
          type: string
          description: Blog Title
        # authorId:
        #   $ref: "#/components/schemas/UserId"
    BlogId:
      $ref: "./components/schemas/BlogId.yml"
    Favorite:
      $ref: "./components/schemas/Favorite.yml"
    Archives:
      $ref: "./components/schemas/Archives.yml"
  # headers:
  #   Origin:
  #     required: true
  #     description: "request origin url"
  #     schema:
  #       type: string
  #       example: "https://example.com"
  #   Authorization:
  #     $ref: "./components/headers/Authorization.yml"
  # responses:
  #   SucceededCreatingBlogPost:
  #     description: "Succeeded in creating a blog post"
  #     content:
  #       application/json:
  #         description: Blog post creation success response.
  #         schema:
  #           type: object
  #           required:
  #             - meta
  #           properties:
  #             meta:
  #               type: object
  #               required:
  #                 - status
  #               properties:
  #                 status:
  #                   type: number
  #       application/x-www-form-urlencoded:
  #         description: Blog post creation success response.
  #         schema:
  #           type: object
  #           properties:
  #             meta:
  #               type: object
  #               properties:
  #                 status:
  #                   type: number
  #   FailedCreatingBlogPost:
  #     $ref: "./components/responses/FailedCreatingBlogPost.yml"
  # parameters:
  #   BlogId:
  #     name: slug
  #     in: path
  #     schema:
  #       type: number
  #       description: Blog Id
  #     required: true
  # requestBodies:
  #   BlogPost:
  #     description:
  #     content:
  #       application/json:
  #         schema:
  #           type: object
  #           properties:
  #             title:
  #               type: string
  #               description: Blog title
  #             body:
  #               type: string
  #               description: Blog body
  #             tags:
  #               type: array
  #               items:
  #                 type: string
  #                 enum: [javascript, typescript, openapi]
  # securitySchemes:
  #   UserSession:
  #     type: apiKey
  #     in: cookie
  #     name: sessionKey
  #     scheme: "http"
  #     openIdConnectUrl: ""
  # pathItems:
