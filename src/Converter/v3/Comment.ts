import { EOL } from "os";

import { OpenApi } from "./types";

export const generateLeading = (schema: OpenApi.Document): string => {
  const messages: string[] = [];
  messages.push("");
  messages.push("Generated by @himenon/openapi-typescript-ast-codegen v0.1.0");
  messages.push("");
  messages.push(`OpenApi : ${schema.openapi}`);
  messages.push("");
  if (schema.info.license) {
    if (schema.info.license.name) {
      messages.push(`License  : ${schema.info.license.name}`);
    }
    if (schema.info.license.url) {
      messages.push(`Url      : ${schema.info.license.url}`);
    }
  }
  if (schema.info.contact) {
    messages.push(`Contact:`);
    if (schema.info.contact.name) {
      messages.push(`  Name  : ${schema.info.contact.name}`);
    }
    if (schema.info.contact.email) {
      messages.push(`  Email : ${schema.info.contact.email}`);
    }
    if (schema.info.contact.url) {
      messages.push(`  Url   : ${schema.info.contact.url}`);
    }
    messages.push("");
  }
  if (schema.externalDocs) {
    messages.push(`Document:`);
    if (schema.externalDocs.description) {
      messages.push(`  Description : ${schema.externalDocs.description}`);
    }
    if (schema.externalDocs.url) {
      messages.push(`  Url         : ${schema.externalDocs.url}`);
    }
  }
  messages.push("");
  return messages
    .map(message => {
      return `// ${message}`;
    })
    .join(EOL);
};
